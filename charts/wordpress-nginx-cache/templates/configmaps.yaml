apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-fastcgi-config
  namespace: {{ .Release.Namespace }}
data:
  fastcgi-cache.conf: |

    # Fix failing redirect issue. See here: https://github.com/bitnami/bitnami-docker-wordpress-nginx/issues/54#issue-972409063
    absolute_redirect off;

    fastcgi_cache_path /opt/bitnami/nginx/tmp/fastcgi/cache levels=1:2 keys_zone=WORDPRESS:100m inactive=60m;
    # fastcgi_cache_path /opt/bitnami/nginx/tmp/fastcgi/cache levels=1:2 keys_zone=phpcache:100m max_size=10g inactive=60m use_temp_path=off;
    fastcgi_cache_key "$scheme$request_method$host$request_uri";
    fastcgi_cache_use_stale error timeout invalid_header http_500;
    fastcgi_ignore_headers Cache-Control Expires Set-Cookie;

    # HTTP Server
    server {
      # Port to listen on, can also be set in IP:PORT format
      listen 9090 ssl http2 default_server;
      root /opt/bitnami/wordpress;

      # Catch-all server block
      # See: https://nginx.org/en/docs/http/server_names.html#miscellaneous_names
      server_name _;

      ssl_certificate      bitnami/certs/server.crt;
      ssl_certificate_key  bitnami/certs/server.key;

      # BEGIN Fix for WordPress plugins and themes
      # Certain WordPress plugins and themes do not properly link to PHP files because of symbolic links
      # https://github.com/bitnami/bitnami-docker-wordpress-nginx/issues/43
      rewrite ^/bitnami/wordpress(/.*) $1 last;
      # END Fix for WordPress plugins and themes

      index index.html index.htm index.php;

      # https://wordpress.org/support/article/nginx/#general-wordpress-rules
      set $skip_cache 0;

      # # requests other than GET and urls with a query string should always go to PHP
      # if ($request_method != GET) {
      #   set $skip_cache 1;
      # }

      # POST requests and urls with a query string should always go to PHP
      if ($request_method = POST) {
        set $skip_cache 1;
      }

      if ($query_string != "") {
        set $skip_cache 1;
      }

      # Don't cache uris containing the following segments
      if ($request_uri ~* "/wp-admin/|/xmlrpc.php|wp-.*.php|^/feed/*|/tag/.*/feed/*|index.php|/.*sitemap.*\.(xml|xsl)") {
        set $skip_cache 1;
      }

      # Don't use the cache for logged in users or recent commenters
      if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {
        set $skip_cache 1;
      }

      location = /favicon.ico {
          log_not_found off;
          access_log off;
      }

      location = /robots.txt {
          allow all;
          log_not_found off;
          access_log off;
      }

      location / {
          try_files $uri $uri/ /index.php?$args;
      }

      location ~* ^.+\.(js|css|ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|rss|atom|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
        access_log off;
        log_not_found off;
        expires max;
      }

      location ~ \.php$ {
        try_files $uri = 404;
        fastcgi_read_timeout 300;
        fastcgi_pass   unix:/opt/bitnami/php/var/run/www.sock;
        fastcgi_index  index.php;

        include        fastcgi_params;
        fastcgi_param  SCRIPT_FILENAME $request_filename;
        # fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;

        fastcgi_cache_bypass $skip_cache;
        fastcgi_no_cache $skip_cache;
        fastcgi_cache WORDPRESS;
        fastcgi_cache_valid  60m;

        add_header X-Cache $upstream_cache_status;
      }

      # location ~ /purge(/.*) {
      #   fastcgi_cache_purge WORDPRESS "$scheme$request_method$host$1";
      # }

      # Deny all attempts to access hidden files such as .htaccess or .htpasswd
      location ~ /\. {
        deny all;
      }

      location /status {
        stub_status on;
        access_log   off;
        allow 127.0.0.1;
        deny all;
      }
    }
